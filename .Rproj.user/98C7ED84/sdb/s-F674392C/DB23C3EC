{
    "contents" : "#### analysis of BSEM simulation results\nlibrary(dplyr)\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(GGally)\nlibrary(ggthemes)\nlibrary(lme4)\nlibrary(sjPlot)\nlibrary(arm)\n\n#### sparse case ####\n\n# read data\nind_gauss <- read.csv(\"sim_results/independant_gaus.csv\")\nind_hs <- read.csv(\"sim_results/independant_hs.csv\")\nind_hs_plus <- read.csv(\"sim_results/independant_hsplus.csv\")\nind_no_cl <- read.csv(\"sim_results/independant_no_cl.csv\")\n\n#### produce long data for set of plots ####\n\nind_long_gauss_dens <- melt(ind_gauss[,1:30]) %>% \n  group_by(variable) %>% \n  summarise(med = median(value),\n            low_025 = quantile(value, .025),\n            high_975 = quantile(value, .975))\n\nind_long_hs_dens <- melt(ind_hs[,1:30]) %>% \n  group_by(variable) %>% \n  summarise(med = median(value),\n            low_025 = quantile(value, .025),\n            high_975 = quantile(value, .975))\n\nind_long_hs_plus_dens <- melt(ind_hs_plus[,1:30]) %>% \n  group_by(variable) %>% \n  summarise(med = median(value),\n            low_025 = quantile(value, .025),\n            high_975 = quantile(value, .975))\n\n#### forest plots of median coefficient estimates ####\n\nggplot(ind_long_gauss_dens, aes(x = med, y = variable)) +\n  geom_point(size = 2) +\n  geom_errorbarh(aes(xmin = ind_long_gauss_dens$low_025, \n                     xmax = ind_long_gauss_dens$high_975,\n                     height = 0)) +\n  theme_tufte() +\n  xlim(c(-.5, .5)) +\n  geom_vline(xintercept = c(-.5, -.25, 0, .25, .5), colour=\"grey\") +\n  ggtitle(\"Independant Gauss Density Plot\")\n\n\nggplot(ind_long_hs_dens, aes(x = med, y = variable)) +\n  geom_point(size = 2) +\n  geom_errorbarh(aes(xmin = ind_long_hs_dens$low_025, \n                     xmax = ind_long_hs_dens$high_975,\n                     height = 0)) +\n  theme_tufte() +\n  xlim(c(-.5, .5)) +\n  geom_vline(xintercept = c(-.5, -.25, 0, .25, .5), colour=\"grey\") +\n  ggtitle(\"Independant Horseshoe Density Plot\")\n\n\nggplot(ind_long_hs_plus_dens, aes(x = med, y = variable)) +\n  geom_point(size = 2) +\n  geom_errorbarh(aes(xmin = ind_long_hs_plus_dens$low_025, \n                     xmax = ind_long_hs_plus_dens$high_975,\n                     height = 0)) +\n  theme_tufte() +\n  xlim(c(-.5, .5)) +\n  geom_vline(xintercept = c(-.5, -.25, 0, .25, .5), colour=\"grey\") +\n  ggtitle(\"Independant Horseshoe Plus Density Plot\")\n\n#### out of sample model fit comparison ####\n\n# prepare LOO fit data\nind_fit <- data.frame(no_cl = ind_no_cl  %>% dplyr::select(elpd_loo), \n                         gauss = ind_gauss  %>% dplyr::select(elpd_loo),\n                         hs = ind_hs  %>% dplyr::select(elpd_loo),\n                         hs_plus = ind_hs_plus %>% dplyr::select(elpd_loo))\n\n# name columns\nnames(ind_fit) <- c(\"no_cl\", \"gauss\", \"hs\", \"hs_plus\")\n\n# model number for multi-level model\nind_fit$model_num <- 1:100\n\n# make long for use and put values on IC scale(*-2)\nind_fit_long <- ind_fit %>% \n  melt(id.vars = 'model_num') %>% \n  mutate(value = value * -2)\n\n# multi-level model testing difference in fit\nind_basic_loo_model <- lmer(value ~ 1 + (1 | model_num), data = ind_fit_long)\nind_test_loo_model <- lmer(value ~ 1 + variable + (1 | model_num), data = ind_fit_long)\n\n# consistent difference in fit by models\nanova(ind_basic_loo_model, ind_test_loo_model)\n\n# plot fixed effect estimates from loo_model\nsjp.lmer(ind_test_loo_model, type = \"fe.std\", sort.coef = T, showPValueLabels = F)\n\n\n# extract fixed effect values and SEs for model fit chart\n\nind_model_fit <- fixef(ind_test_loo_model)\nind_model_fit_se <- se.fixef(ind_test_loo_model)\n\nind_model_fit_plot <- as.data.frame(cbind(ind_model_fit, ind_model_fit_se))\nind_model_fit_plot$models <- row.names(ind_model_fit_plot)\nind_model_fit_plot <- ind_model_fit_plot %>% filter(models != \"(Intercept)\")\n\n# plot model fit\nggplot(ind_model_fit_plot, aes(x = models, y = ind_model_fit)) +\n  geom_point(size = 3) +\n  geom_errorbar(aes(ymin = ind_model_fit_plot$ind_model_fit - \n                      1.96*ind_model_fit_plot$ind_model_fit_se,\n                    ymax = ind_model_fit_plot$ind_model_fit + \n                      1.96*ind_model_fit_plot$ind_model_fit_se),\n                width = .2) +\n  coord_flip() +\n  theme_tufte() +\n  geom_hline(yintercept = c(0, 10, 20, 30), colour=\"grey\") +\n  ggtitle(\"Independant Model LOO Effect Sizes\")\n\n#### LOO parameter number analysis ####\n\n# prepare p_LOO fit data\nind_param_num <- data.frame(no_cl = ind_no_cl  %>% dplyr::select(p_loo), \n                               gauss = ind_gauss  %>% dplyr::select(p_loo),\n                               hs = ind_hs  %>% dplyr::select(p_loo),\n                               hs_plus = ind_hs_plus  %>% dplyr::select(p_loo))\n\n# name columns\nnames(ind_param_num) <- c(\"no_cl\", \"gauss\", \"hs\", \"hs_plus\")\n\n# model number for multi-level model\nind_param_num$model_num <- 1:100\n\n# make long for use \nind_param_long <- ind_param_num %>% \n  melt(id.vars = 'model_num')\n\n# multi-level model testing difference in number of parameters\nind_basic_param_model <- lmer(value ~ -1 + (1 | model_num), data = ind_param_long)\nind_test_param_model <- lmer(value ~ -1 + variable + (1 | model_num), data = ind_param_long)\n\n# consistent difference in fit by models\nanova(ind_basic_param_model, ind_test_param_model)\n\n# extract fixed effect values and SEs for bar chart\n\nind_param_numbers <- fixef(ind_test_param_model)\nind_param_numbers_se <- se.fixef(ind_test_param_model)\n\nind_param_number_plot <- as.data.frame(cbind(ind_param_numbers, ind_param_numbers_se))\nind_param_number_plot$models <- row.names(ind_param_number_plot)\n\n# plot parameter numbers\nggplot(ind_param_number_plot, aes(x = models, y = ind_param_numbers)) +\n  geom_point(size = 3) +\n  geom_errorbar(aes(ymin = ind_param_number_plot$ind_param_numbers - \n                      1.96*ind_param_number_plot$ind_param_numbers_se,\n                    ymax = ind_param_number_plot$ind_param_numbers + \n                      1.96*ind_param_number_plot$ind_param_numbers_se),\n                width = .2) +\n  coord_flip() +\n  theme_tufte() +\n  geom_hline(yintercept = c(420, 430, 440, 450), colour=\"grey\") +\n  ylim(c(420, 455)) +\n  ggtitle(\"Independant Model - Estimated Number of Parameters\")\n\n\n\n\n\n\n\n\n",
    "created" : 1468182825427.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3270913946",
    "id" : "DB23C3EC",
    "lastKnownWriteTime" : 1468443840,
    "path" : "~/GitHub/BSEM Priors/independant_results_analysis.R",
    "project_path" : "independant_results_analysis.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "type" : "r_source"
}