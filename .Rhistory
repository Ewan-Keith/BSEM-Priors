holz_dat <- HS.ability.data %>% select(-c(id,
Gender))
holz_dat <- HS.ability.data %>% select(-id,
Gender)
holz_dat <- HS.ability.data %>% select(id,
Gender)
library(dplyr)
holz_dat <- HS.ability.data %>% select('id',
'Gender')
holz_dat <- HS.ability.data %>%
dplyr::select(
-id,
-Gender)
holz_dat <- HS.ability.data %>%
dplyr::select(
-id, -Gender, -Grade, -agey, -agem,
-paperrev, -flagssub)
holz_dat <- HS.ability.data %>%
dplyr::select(
-id, -Gender, -grade, -agey, -agem,
-paperrev, -flagssub)
holz_dat <- HS.ability.data %>%
dplyr::select(
-id, -Gender, -grade, -agey, -agem,
-paperrev, -flagssub,
-deduct, -numeric, -problemr, -series, -arithmet)
rm(HS.ability.data)
str(holz_dat)
holz_dat  %>%  filter(school)  %>% summary()
holz_dat  %>%  filter(school)
holz_dat  %>%  select(school)  %>% summary()
holz_dat  %>%  dplyr::select(school)  %>% summary()
grant_dat <- holz_dat %>% filter(school == Grant-White)
grant_dat <- holz_dat %>% filter(school == 'Grant-White')
past_dat <- holz_dat %>% filter(school == 'Pasteur')
rm(holz_dat)
grant_dat[,-1] %>% str()
scale(grant_dat[,-1])
?scale
grant_dat[,-1] <- scale(grant_dat[,-1])
data(HS.ability.data)
holz_dat <- HS.ability.data %>%
dplyr::select(
-id, -Gender, -grade, -agey, -agem,
-paperrev, -flagssub,
-deduct, -numeric, -problemr, -series, -arithmet)
grant_dat <- holz_dat %>% filter(school == 'Grant-White')
past_dat <- holz_dat %>% filter(school == 'Pasteur')
rm(HS.ability.data) # clean work space
rm(holz_dat)
grant_dat_stand <- scale(grant_dat[,-1])
View(grant_dat_stand)
past_dat_stand <- scale(past_dat[,-1])
rm(HS.ability.data, holz_dat)
rm(HS.ability.data, holz_dat, grant_dat, past_dat)
View(grant_dat_stand)
typeof(grant_dat_stand)
typeof(grant_dat_stand  %>% as.matrix())
grant_dat_stand[1:5, 1:5]
grant_dat_stand == as.matrix(grant_dat_stand)
grant_dat_stand != as.matrix(grant_dat_stand) %>% sum()
sum(grant_dat_stand != as.matrix(grant_dat_stand))
stan_grant_dat <- list(N = 156,
P = 19,
D = 4,
C = 57,
X = grant_dat_stand
)
fit_grant <- stan(file = 'H&S analysis/models/H&S Gaussian.stan',
data = stan_grant_dat,
iter = 3, chains = 3, thin = 3)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
fit_grant <- stan(file = 'H&S analysis/models/H&S Gaussian.stan',
data = stan_grant_dat,
iter = 3, chains = 3, thin = 3)
fit_grant <- stan(file = 'H&S analysis/models/H&S Gaussian.stan',
data = stan_grant_dat,
iter = 3000, chains = 3, thin = 3)
library(shinystan)
launch_shinystan(fit_grant)
launch_shinystan(fit_grant)
# fit model
fit_grant <- stan(file = 'H&S analysis/models/H&S Gaussian.stan',
data = stan_grant_dat,
iter = 3000, chains = 3, thin = 3)
launch_shinystan(fit_grant)
fit_grant <- stan(file = 'H&S analysis/models/H&S Gaussian.stan',
data = stan_grant_dat,
iter = 3000, chains = 3, thin = 3)
fit_grant <- stan(file = 'H&S analysis/models/H&S Gaussian.stan',
data = stan_grant_dat,
iter = 3000, chains = 3, thin = 3,
adapt_delta = .9)
fit_grant <- stan(file = 'H&S analysis/models/H&S Gaussian.stan',
data = stan_grant_dat,
iter = 3000, chains = 3, thin = 3,
control = list(adapt_delta = 0.9))
launch_shinystan(fit_grant)
fit_grant <- stan(file = 'H&S analysis/models/H&S horseshoe.stan',
data = stan_grant_dat,
iter = 3000, chains = 3, thin = 3,
control = list(adapt_delta = 0.9))
fit_grant_hs <- stan(file = 'H&S analysis/models/H&S horseshoe.stan',
data = stan_grant_dat,
iter = 3, chains = 3, thin = 3,
control = list(adapt_delta = 0.9))
fit_grant_hs <- stan(file = 'H&S analysis/models/H&S horseshoe.stan',
data = stan_grant_dat,
iter = 3000, chains = 3, thin = 3,
control = list(adapt_delta = 0.9))
fit_grant_hs <- stan(file = 'H&S analysis/models/H&S horseshoe.stan',
data = stan_grant_dat,
iter = 1000, chains = 3, thin = 3,
control = list(adapt_delta = 0.99))
launch_shinystan(fit_grant_hs)
launch_shinystan(fit_grant)
fit_grant_hs_plus <- stan(file = 'H&S analysis/models/H&S horseshoe plus.stan',
data = stan_grant_dat,
iter = 3, chains = 3, thin = 3)
fit_grant_hs_plus <- stan(file = 'H&S analysis/models/H&S horseshoe plus.stan',
data = stan_grant_dat,
iter = 1000, chains = 3, thin = 3,
control = list(adapt_delta = 0.999))
launch_shinystan(fit_grant_hs_plus)
fit_grant_hs <- stan(file = 'H&S analysis/models/H&S horseshoe.stan',
data = stan_grant_dat,
iter = 3000, chains = 3, thin = 3,
control = list(adapt_delta = 0.99))
launch_shinystan(fit_grant_hs)
fit_grant_hs <- stan(file = 'H&S analysis/models/H&S horseshoe.stan',
data = stan_grant_dat,
iter = 3000, chains = 3, thin = 3,
control = list(adapt_delta = 0.999))
launch_shinystan(fit_grant_hs)
?saveRDS
saveRDS(fit_grant_hs, file = 'H&S analysis/models/fitted models/fitted H&S horseshoe.rds')
test <- readRDS('H&S analysis/models/fitted models/fitted H&S horseshoe.rds')
launch_shinystan(test)
launch_shinystan(fit_grant)
saveRDS(fit_grant, file = 'H&S analysis/models/fitted models/fitted H&S gaussian.rds')
fit_grant_hs_plus <- stan(file = 'H&S analysis/models/H&S horseshoe plus.stan',
data = stan_grant_dat,
iter = 3000, chains = 3, thin = 3,
control = list(adapt_delta = 0.999))
launch_shinystan(fit_grant_hs_plus)
launch_shinystan(fit_grant_hs_plus)
saveRDS(fit_grant_hs_plus, file = 'H&S analysis/models/fitted models/fitted H&S horseshoe plus.rds')
library(dplyr)
library(rstan)
library(shinystan)
library(loo)
library(reshape2)
library(ggplot2)
library(GGally)
library(ggthemes)
library(lme4)
library(arm)
library(OpenMx)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
data(HS.ability.data)
# remove unused variables
holz_dat <- HS.ability.data %>%
dplyr::select(
-id, -Gender, -grade, -agey, -agem,
-paperrev, -flagssub,
-deduct, -numeric, -problemr, -series, -arithmet)
# split out into schools
grant_dat <- holz_dat %>% filter(school == 'Grant-White')
past_dat <- holz_dat %>% filter(school == 'Pasteur')
# standardise each dataset individually
grant_dat_stand <- scale(grant_dat[,-1])
past_dat_stand <- scale(past_dat[,-1])
# clean work space
rm(HS.ability.data, holz_dat, grant_dat, past_dat)
stan_grant_dat <- list(N = 156,
P = 19,
D = 4,
C = 57,
X = grant_dat_stand
)
fit_grant_hs_plus <- stan(file = 'H&S analysis/models/H&S horseshoe plus.stan',
data = stan_grant_dat,
iter = 3000, chains = 3, thin = 3,
control = list(adapt_delta = 0.999,
max_treedepth = 15))
saveRDS(fit_grant_hs_plus, file = 'H&S analysis/models/fitted H&S horseshoe plus.rds')
launch_shinystan(fit_grant_hs_plus)
library(glmnet)
data(QuickStartExample)
fit <- glmnet(x, y)
library(broom)
install.packages("broom")
library(broom)
data(QuickStartExample)
lasso_fit <- glmnet(x, y)
tidied_lasso <- tidy(lasso_fit)
rm(fit)
head(tidied_lasso)
library(ggplot2)
plot(lasso_fit)
ggplot(tidied_lasso, aes(x = lambda, y = estimate))
summary(tidied_lasso)
ggplot(tidied_lasso, aes(x = lambda, y = estimate)) + geom_line()
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) + geom_line()
library(ggthemes)
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_tufte()
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_bw()
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc()
tidied_lasso <- tidy(lasso_fit) %>% filter(term != "(Intercept)")
library(dplyr)
tidied_lasso <- tidy(lasso_fit) %>% filter(term != "(Intercept)")
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc()
ridge_fit <- glmnet(x, y, alpha = 0)
tidied_ridge <- tidy(ridge_fit) %>% filter(term != "(Intercept)")
head(tidied_ridge)
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc()
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,5)
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,25)
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,30)
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc()
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace")
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
ggtitle("LASSO Trace")
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace")
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
ylim(-1.5, 1.5)
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
ylim(-1, 1.5)
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
ggtitle("LASSO Trace") +
ylim(-1, 1.5)
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
ggtitle("LASSO Trace")
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
ggtitle("LASSO Trace") +
ylim(-1, 1.5)
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
ggtitle("LASSO Trace") +
ylim(-1, 1.2)
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
ggtitle("LASSO Trace") +
ylim(-1.2, 1.5)
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
ggtitle("LASSO Trace") +
ylim(-1.2, 1.5) +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5))
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
ggtitle("LASSO Trace") +
#ylim(-1.2, 1.5) +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5))
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
ggtitle("LASSO Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5))
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
ylim(-1, 1.5)
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
ylim(-1.2, 1.5)
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
ggtitle("LASSO Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5))
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
ylim(-1.2, 1.5)+
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5))
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
#ylim(-1.2, 1.5)+
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5))
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
#ylim(-1.2, 1.5)+
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1, 1.5))
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
#ylim(-1.2, 1.5)+
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1.2, 1.5))
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
ggtitle("LASSO Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5))
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
ggtitle("LASSO Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1.2, 1.5))
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
#ylim(-1.2, 1.5)+
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1.2, 1.5))
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1.2, 1.5))
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
ggtitle("LASSO Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1.2, 1.5))
lasso_gg <- ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
ggtitle("LASSO Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1.2, 1.5))
ridge_gg <- ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line() +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1.2, 1.5))
library(gridExtra)
grid.arrange()
grid.arrange(ridge_gg, lasso_gg, ncol = 2)
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line(aes(alpha = 1)) +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1.2, 1.5))
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line(aes(alpha = .8)) +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1.2, 1.5))
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line(aes(alpha = .6)) +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1.2, 1.5))
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_line(aes(alpha = .4)) +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1.2, 1.5))
ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_path(alpha = .4) +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1.2, 1.5))
ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_path(alpha = .4) +
theme_hc() +
ggtitle("LASSO Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1.2, 1.5))
lasso_gg <- ggplot(tidied_lasso, aes(x = lambda, y = estimate, group = term)) +
geom_path(alpha = .4) +
theme_hc() +
ggtitle("LASSO Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1.2, 1.5))
ridge_gg <- ggplot(tidied_ridge, aes(x = lambda, y = estimate, group = term)) +
geom_path(alpha = .4) +
theme_hc() +
xlim(0,30) +
ggtitle("Ridge Regression Trace") +
scale_y_continuous(breaks = c(-1, -.5, 0, .5, 1, 1.5), limits = c(-1.2, 1.5))
grid.arrange(ridge_gg, lasso_gg, ncol = 2)
getwd()
setwd("C:/Users/Ewan/Desktop/fitted models")
library(shinystan)
ls
ls()
load(fitted H&S gaussian.rds)
load("fitted H&S gaussian.rds")
Gauss_mod <- readRDS("fitted H&S gaussian.rds")
launch_shinystan(Gauss_mod)
library(loo)
Gauss_cross_loadings <- rstan::extract(Gauss_mod, pars = "cl")$cl
Gauss_estimated_cl <- apply(cross_loadings, 2, median)
Gauss_estimated_cl <- apply(Gauss_cross_loadings, 2, median)
Gauss_estimated_cl
launch_shinystan(Gauss_mod)
rstan::extract(Gauss_mod, pars = "rho")
rstan::extract(Gauss_mod, pars = "Rho")
rstan::extract(Gauss_mod, pars = "Rho")$Rho
rstan::extract(Gauss_mod, pars = "Rho")$Rho  %>% apply(2, median)
library(dplyr)
rstan::extract(Gauss_mod, pars = "Rho")$Rho  %>% apply(2, median)
rstan::extract(Gauss_mod, pars = "Rho")$Rho  %>% str()
hs_mod <- readRDS("fitted H&S horseshoe.rds")
launch_shinystan(hs_mod)
getwd()
library(dplyr)
library(rstan)
library(shinystan)
library(loo)
library(reshape2)
library(ggplot2)
library(GGally)
library(ggthemes)
library(lme4)
library(arm)
library(MBESS)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
fit_grant_hs <- readRDS('H&S horseshoe[correct data].rds')
fit_grant <- readRDS('H&S gaussian [correct data].rds')
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
data(HS.data)
holz_dat <- HS.data %>%
dplyr::select(
-id, -Gender, -grade, -agey, -agem,
-paperrev, -flagssub,
-deduct, -numeric, -problemr, -series, -arithmet)
grant_dat <- holz_dat %>% filter(school == 'Grant-White')
past_dat <- holz_dat %>% filter(school == 'Pasteur')
grant_dat_stand <- scale(grant_dat[,-1])
past_dat_stand <- scale(past_dat[,-1])
rm(HS.data, holz_dat, grant_dat, past_dat, past_dat_stand)
.2^2
sqrt(.01)
stan_grant_dat <- list(N = 145,
P = 19,
D = 4,
C = 57,
X = grant_dat_stand
)
fit_grant_repli <- stan(file = 'H&S analysis/models/H&S Gaussian replic.stan',
data = stan_grant_dat,
iter = 10000, chains = 3, thin = 3,
control = list(adapt_delta = 0.999))
saveRDS(fit_grant_repli, file = 'H&S gaussian replication [correct data].rds')
launch_shinystan(fit_grant_repli)
launch_shinystan(fit_grant_repli)
